# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
persist: true
# Provides machine specific configuration options.
machine:
    # Defines the role of the machine within the cluster.
    type: controlplane
    # The `token` is used by a machine to join the PKI of the cluster.
    token: ENC[AES256_GCM,data:QYlM6kOkFixLvdZas9I18HIl1QxislQ=,iv:AgeqQVXpIy9MIrs6DkKiNrgM/9jgqC0VfigrnY83mas=,tag:IMyEAf39uoSaPSg33DWhkA==,type:str]
    # The root certificate authority of the PKI.
    ca:
        crt: ENC[AES256_GCM,data:mHEW7cFC79wj/n8fK///WBRXsiSwhMGMuN9UN9OiAGUmntdK+Dcw7tCXBydhf53oN5n/oxxuOrHs6liYTOJdyfyRMQXfzl/m9Uy/OmqZPkMLFrin7fgjdwcr1YauxDlxULxtPOfpQ+R8fmziM+E23Ucb7LOw3SqignN/MZUo0jShN82x5673dsEJrozWetYjqYtTZK9dlVpRj7aKXe29QKGVIuC6j/nJ6MRc0owLHdCiQkdD8RRF7JsxmIWEi1Cn0nvxRTUN3ROtLCiHMjvJlWVMyQ7iWJDH1bMP19oKTS5MVGBpE3dMh2qYg0PWoHx+eS8smOK0P53DeNegUPsmmtDyPjVg2eGzGTCLLzzRICNL3xX6cGTrXimqRlCUqhn7sDYwVEP3UfZMYPLphkGgh5H+zOG61KyFuLkdrXvptV8dOmGAraqAGLwpoRcNHtHd0njQag9jmwSkk5aMzb/1392vCPIcJx7S8QTks8AaRecKlmLNnIkHf/VYcSCSCQT5UJI2+oz2ovkRBAWen0ztfZVu7sCcQKx+/2AT/AdQggxHM1lVXXM49pXtIIGMnOnMa1R0PvKpqwSE+J+6EUFklEP63WJx/9nnSm39w0RDnnUuZ/z+uB+BKfcGkD59v4tui8KlzeSOq7jeM9JSSvDgi5PF0W/eG8iq/stWwuKHaD2FcpkJGh65pU3aC4jiikK/H2ZnJM3SVKB51zedwdK67ACx1djHylQpzfl26oeCAzZERPEa97p8Rpak1h2Tbo7sfit7mFD7m+UPEDQg0lLrgW3PnfI8A69vDeOVQNXKNluxZaDttv7rjhZRkxA0VF2iwOQoONOe0tDVsDMGVH5RRZ8TqRWwqUrkNMLCz5HWEYJcSPcX,iv:HbWK+QMGqHbkgylUNv8aRmkD+44NhPvUJN0v99LYnXU=,tag:+SAb0ANYzrNIyPDRgnqNxQ==,type:str]
        key: ENC[AES256_GCM,data:iy98VD1Cxi/Bx+0D6ocTSWyRgBOoaX5zQahjS6xr+DAjxfPddU6cwrgSKr01coACEJYjrYvRbBk+htX8oT3CL2T+74/kGQ0fp1JYM1FPAN5gC69zXqznsQEvpQvlJpM99heptIJT6QHToLyjhUiUBlvxtJ2D89q2UpLQjBnfilbg6xAJZ4Taei7msaoCPL9SbLs5DNelHnkg048VI3WwMHrrG5dJkpZM2zjzPHkGyBtSvDHS,iv:i7Y/JLY8dyxauVQL1Za/X2/yMRnam6zeZGjCgvhK3Ss=,tag:/jj0xXmNT1aeOHnBhR6NZQ==,type:str]
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10
    # Used to provide additional options to the kubelet.
    kubelet:
        # The `image` field is an optional reference to an alternative kubelet image.
        image: ghcr.io/siderolabs/kubelet:v1.32.0
        # Enable container runtime default Seccomp profile.
        defaultRuntimeSeccompProfileEnabled: true
        # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        disableManifestsDirectory: true
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        # extraArgs:
        #     key: value
        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        # extraMounts:
        #     - destination: /var/lib/example # Destination is the absolute path where the mount will be placed in the container.
        #       type: bind # Type specifies the mount kind.
        #       source: /var/lib/example # Source specifies the source path of the mount.
        #       # Options are fstab style mount options.
        #       options:
        #         - bind
        #         - rshared
        #         - rw
        # # The `extraConfig` field is used to provide kubelet configuration overrides.
        # extraConfig:
        #     serverTLSBootstrap: true
        # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
        # credentialProviderConfig:
        #     apiVersion: kubelet.config.k8s.io/v1
        #     kind: CredentialProviderConfig
        #     providers:
        #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
        #           defaultCacheDuration: 12h
        #           matchImages:
        #             - '*.dkr.ecr.*.amazonaws.com'
        #             - '*.dkr.ecr.*.amazonaws.com.cn'
        #             - '*.dkr.ecr-fips.*.amazonaws.com'
        #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
        #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
        #           name: ecr-credential-provider
        # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
        # nodeIP:
        #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
        #     validSubnets:
        #         - 10.0.0.0/8
        #         - '!10.0.0.3/32'
        #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        interfaces:
            - deviceSelector:
                physical: true
              dhcp: false
              vip:
                ip: 10.0.30.25
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: enp0s1 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.0/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network (destination).
    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #       
    #       # # Picks a network device using the selector.
    #       # # select a device with bus prefix 00:*.
    #       # deviceSelector:
    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #     driver: virtio_net # Kernel driver, supports matching by wildcard.
    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #     - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #       driver: virtio_net # Kernel driver, supports matching by wildcard.
    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - enp2s0
    #       #         - enp2s1
    #       #     # Picks a network device using the selector.
    #       #     deviceSelectors:
    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #         - hardwareAddr: '*:f0:ab' # Device hardware (MAC) address, supports matching by wildcard.
    #       #           driver: virtio_net # Kernel driver, supports matching by wildcard.
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.
    #       # # Bridge specific options.
    #       # bridge:
    #       #     # The interfaces that make up the bridge.
    #       #     interfaces:
    #       #         - enxda4042ca9a51
    #       #         - enxae2a6774c259
    #       #     # Enable STP on this bridge.
    #       #     stp:
    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.
    #       # # Configure this device as a bridge port.
    #       # bridgePort:
    #       #     master: br0 # The name of the bridge master interface
    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true
    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
    #       # # Wireguard specific configuration.
    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # Virtual (shared) IP address configuration.
    #       # # layer2 vip example
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.
    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 8.8.8.8
    #     - 1.1.1.1
    # # Used to statically set arbitrary search domains.
    # searchDomains:
    #     - example.org
    #     - example.com
    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld
    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        # The disk used for installations.
        disk: /dev/sda
        # Allows for supplying the image used to perform the installation.
        image: factory.talos.dev/installer/58e4656b31857557c8bad0585e1b2ee53f7446f4218f3fae486aa26d4f6470d8:v1.9.4
        # Indicates if the installation disk should be wiped at installation time.
        wipe: false
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/
    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
        # Enable stable default hostname.
        stableHostname: true
        # Enable checks for extended key usage of client certificates in apid.
        apidCheckExtKeyUsage: true
        # Enable XFS project quota support for EPHEMERAL partition and user disks.
        diskQuotaSupport: true
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            # Enable KubePrism support - will start local load balancing proxy.
            enabled: true
            # KubePrism port.
            port: 7445
        # Configures host DNS caching resolver.
        hostDNS:
            # Enable host DNS caching resolver.
            enabled: true
            # Use the host DNS resolver as upstream for Kubernetes CoreDNS pods.
            forwardKubeDNSToHost: true
            # # Configure Talos API access from Kubernetes pods.
            # kubernetesTalosAPIAccess:
            #     enabled: true # Enable Talos API access from Kubernetes pods.
            #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
            #     allowedRoles:
            #         - os:reader
            #     # The list of Kubernetes namespaces Talos API access is available from.
            #     allowedKubernetesNamespaces:
            #         - kube-system
    # Configures the node labels for the machine.
    nodeLabels:
        node.kubernetes.io/exclude-from-external-load-balancers: ""
        # # Provides machine specific control plane configuration options.
        # # ControlPlane definition example.
        # controlPlane:
        #     # Controller manager machine specific configuration options.
        #     controllerManager:
        #         disabled: false # Disable kube-controller-manager on the node.
        #     # Scheduler machine specific configuration options.
        #     scheduler:
        #         disabled: true # Disable kube-scheduler on the node.
        # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
        # # nginx static pod.
        # pods:
        #     - apiVersion: v1
        #       kind: pod
        #       metadata:
        #         name: nginx
        #       spec:
        #         containers:
        #             - image: nginx
        #               name: nginx
        # # Used to partition, format and mount additional disks.
        # # MachineDisks list example.
        # disks:
        #     - device: /dev/sdb # The name of the disk to use.
        #       # A list of partitions to create on the disk.
        #       partitions:
        #         - mountpoint: /var/mnt/extra # Where to mount the partition.
        #           
        #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.
        #           # # Human readable representation.
        #           # size: 100 MB
        #           # # Precise value in bytes.
        #           # size: 1073741824
        # # Allows the addition of user specified files.
        # # MachineFiles usage example.
        # files:
        #     - content: '...' # The contents of the file.
        #       permissions: 0o666 # The file's permissions in octal.
        #       path: /tmp/file.txt # The path of the file.
        #       op: append # The operation to use
        # # The `env` field allows for the addition of environment variables.
        # # Environment variables definition examples.
        # env:
        #     GRPC_GO_LOG_SEVERITY_LEVEL: info
        #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
        #     https_proxy: http://SERVER:PORT/
        # env:
        #     GRPC_GO_LOG_SEVERITY_LEVEL: error
        #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
        # env:
        #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
        # # Used to configure the machine's time settings.
        # # Example configuration for cloudflare ntp server.
        # time:
        #     disabled: false # Indicates if the time service is disabled for the machine.
        #     # description: |
        #     servers:
        #         - time.cloudflare.com
        #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
        # # Used to configure the machine's sysctls.
        # # MachineSysctls usage example.
        # sysctls:
        #     kernel.domainname: talos.dev
        #     net.ipv4.ip_forward: "0"
        #     net/ipv6/conf/eth0.100/disable_ipv6: "1"
        # # Used to configure the machine's sysfs.
        # # MachineSysfs usage example.
        # sysfs:
        #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
        # # Machine system disk encryption configuration.
        # systemDiskEncryption:
        #     # Ephemeral partition encryption.
        #     ephemeral:
        #         provider: luks2 # Encryption provider to use for the encryption.
        #         # Defines the encryption keys generation and storage method.
        #         keys:
        #             - # Deterministically generated key from the node UUID and PartitionLabel.
        #               nodeID: {}
        #               slot: 0 # Key slot number for LUKS2 encryption.
        #               
        #               # # KMS managed encryption key.
        #               # kms:
        #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
        #         
        #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
        #         # cipher: aes-xts-plain64
        #         # # Defines the encryption sector size.
        #         # blockSize: 4096
        #         # # Additional --perf parameters for the LUKS2 encryption.
        #         # options:
        #         #     - no_read_workqueue
        #         #     - no_write_workqueue
        # # Configures the udev system.
        # udev:
        #     # List of udev rules to apply to the udev system
        #     rules:
        #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
        # # Configures the logging system.
        # logging:
        #     # Logging destination.
        #     destinations:
        #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
        #           format: json_lines # Logs format.
        # # Configures the kernel.
        # kernel:
        #     # Kernel modules to load.
        #     modules:
        #         - name: brtfs # Module name.
        # # Configures the seccomp profiles for the machine.
        # seccompProfiles:
        #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
        #       # The `value` field is used to provide the seccomp profile.
        #       value:
        #         defaultAction: SCMP_ACT_LOG
        # # Override (patch) settings in the default OCI runtime spec for CRI containers.
        # # override default open file limit
        # baseRuntimeSpecOverrides:
        #     process:
        #         rlimits:
        #             - hard: 1024
        #               soft: 1024
        #               type: RLIMIT_NOFILE
        # # Configures the node annotations for the machine.
        # # node annotations example.
        # nodeAnnotations:
        #     customer.io/rack: r13a25
        # # Configures the node taints for the machine. Effect is optional.
        # # node taints example.
        # nodeTaints:
        #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: ENC[AES256_GCM,data:vXPAryHwBWSHUdHB9Yqyi6aE/rCUZIqcF/nDcvktOx/GQ9JRWkoD/9jW4Ro=,iv:l1bgqGNAC4Y+QK6XZpVPnWar+YraQyxOOCSFntbbYeQ=,tag:TadzqEjeB6EavNAff0QRcw==,type:str]
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: ENC[AES256_GCM,data:9BKpM63Y2CbrCW16M2mTYyIF9BcZMByamUscyMvNcYGX5tREdDJq2YmBBsE=,iv:n3vN3yG5uhaNmUhYsm+pDFsYUIk+CvVlPXHwT2Y92PI=,tag:PfGnpisjSvrfEwjd6NJQlg==,type:str]
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://10.0.30.25:6443
    # Configures the cluster's name.
    clusterName: talos
    # Provides cluster specific network configuration options.
    network:
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
            # # The CNI used.
            # cni:
            #     name: custom # Name of CNI to use.
            #     # URLs containing manifests to apply for the CNI.
            #     urls:
            #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: ENC[AES256_GCM,data:QFsSs+v5RN3tKgu/4w2ziHQUJ9W4Dj0=,iv:esbOb8KHbVzCfCKzVJHYY3F663CtYpjNdBzFWOK0Gd0=,tag:zKDtJ7tCf+6Ld2ime0DTEQ==,type:str]
    # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    secretboxEncryptionSecret: ENC[AES256_GCM,data:r4GZxw56NEA0rdESGAVRp8HUMtP4QrW+rqBEspsgpvellLFjrcfWMhtIxcA=,iv:K7kFODS5Yq15m6WUD97cwTd57eT+bngZlAJ1Y5yisYU=,tag:BFogAmNOU5T2v6EJ/SIn/g==,type:str]
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: ENC[AES256_GCM,data:lah/wWumGxxOwdwe8+m3K3Paj62qoJVTz7iC+Z+Sj8URNnqBSBc6FLrzEYhLNmWpfQPg7BgNZL3J5pbJFzzY/xHsFnK4Tjuh7KdhY39XI8NMZtjRM6u78BA1s5aDt5LT2f9ZnoLi+H1eZp3mZmAen9igKAqP0H9WrS1/WeZapMtr7+NqL6BvLHRJULjfuu7w5WNH9zqhg8mtnwlSavqFpe/DScmnqCppAWeQrnrudvQ5377SX6EMjTs0eWLLyz/GanLPYiHyDwgx5E1VOkcLzlSv2GrD4zcoY6n5LFTVZeD9G6+zB2NI/WML1h5IJb2A/cr2wDHUD/RLtyuEdXwfBV4Kdo0/4rp0W8phSn0RYksUEEFBhrSbocN1uKX4m0VexgKOr1eMNgmBy6UR3qOuCEFcUjfWA/uu7xTQmWhQplDZxpuv8/63BB98qn9U+XqqKumxxF6l214Ab50FJAOD3HEl2Efr5uXwpM9ZGkf+94IPWTljwIq/S/BtAeKwwVn8fgrno49aMlmYLBECuJ8tTR7Cv5uRfsEpfledOn6IUyL97piXEf5HdyCfbsLH9SYW1dVXs9XMbdrwzNmGEP8+IGqEXDDOlUa8Yehk7ikZm/LRlnPRv3E2pJoXzFuxllvuPLV5kdLx9HVhJ+KXzqSDNfoA2BD+OQ0T86kxuegvxXq4YXQKvdbuiVb/YFpC2/dphLw7trFovbyRJNbY+WGk+G1LgrNRIGgvf+XGa4x9DGa9eArQxoicMtw9VfY2KbLjEmQFNV38wgFDEMsUw4Ee/mZCLFQaZzazj/58y+00UTpldyoP6d+l+tavORFHU1mpCcec7FFpFYyyKj9NlAU+w0RwH74qJNdiD9mgD6azeDmsfNpEXS7hGH5nwRx6lvoUmnqG85Xk5DO9gwtxSnre9LpmchbU+dkrYYSuKxDEl/5UJi8IralP6eGwkrZpyp6hCX8l+hpISe5+43sutWaHE+kbWSYMwuVCCRP8cVwDVrcFaXi7WQofHV6opw8Py6AGxPZuRxQ65L8p2EDmJP10Z9kmgso=,iv:OMBjEEvY9tzdwgzp4ZP22T46VrgysZ+mhhaQKPoNqsU=,tag:0GqUqR5z9gGq3l0rhKrQnw==,type:str]
        key: ENC[AES256_GCM,data:FnJm/kgvvmBkvGjzvFcXn5p7ZZ87e7nPabiflwqFuEc+fh+woj66FL1z5Un6YVGP4aKep/WwlQ0RTfjDV8W+BLnpbRN6Bf7LvAbldQIgzfIIkdPXJWHqXWUGBBcETqrkWZ4vx3+sDRG6DZHohIjng/AgaVp+pepSj+dMUmxE+tCv/Jm4SB9+ApoNGjtZD87sYNZ4/UqxWv/dsmvHEH21eXaAOQ4hM+5jDD//hSuVyN6Ci7QHXyV6WIfEuPj+P6aOcI2L8KYX7Jg++ul3WiqArBwl7s9d8slOOzck4mE8/Gqrf/GGs5cdF24AIothPlykrSAX8XQk2p8yI4Zs3b/ldtnXglTwA5oELNIhXqThS+z0xzTR4ktmt9yjgPl0yXOEATbwXZCpMaH/HtVjLdvKNg==,iv:rab71F6shEi6GpbJASIxSMTfjGwfAWFzx61Co3bgOCA=,tag:q6LGBE50fk1YHsmZ7T5rSQ==,type:str]
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: ENC[AES256_GCM,data:TmX14kIfS+GiuEf4z2WZAzC1QX8OWjSiKveC2kxbWHg4rorzGb3+kfqzd+U8qFBWfSARWxarK7wevDjdVgfePBFjHv5cx7xEPBripPghXZEV/fnyD/HyFwgRFVumAOpZWflsYeAI6DXrz0o7mfMk1TU4u5Jtu4mNBYTh8cf6mBAx+/P2Z8nrvsHEuUMzsBDl0aBeSx1qjeUxsA7A/SVAY38V+QcFJHwkaPBwpMNawM62MQaHPlto1yKAjNDv6yyKdwZYlzbGoO0MkIAWi6gxA843oguQ1NADVpZ7229/ropUnvv/XhsDUoanQq2aot5fG1Gii1PgDnoWc8KQTLpa/ba5Ltn03GaMZXtuEQbXL5VHoCCDi+kLbEJzEKlYglD9eMPFlj6gwT2jb/n4MvJV4ELby4dXSW3YJMLHFWiI6WoVn5PRTF3b0qB6Pii5p4dVWD09X68FWANuiSFCt6+kdE1UqPMn0lBTmr2TgZrAcFwcU63afFgwP/08AEsg2oabldwebu3o0OFasyP31WzqcJjywCFqpPqsBkpYJImvJ2c+pFqBloQrsZhWV/2XfjJKNrYIo3CwqnYe86YrvnuO8RNJPNa80DBe1aUHqw7mdoavvdi2HxCqEYwgqbvTPxxhbeOxtwxELEwbi0YHrHX1uGdAa7MG7M+arVXYGsXNAaWASjGVhkiX2+elyYZK1kGTHChDhSdrOc7kgktwT9fmOv6JU8A2j8qqDs6gvQgwBdIYgbCDJRxjB+yzbQ1XuIlBGXUDWzbZU8jiWoZ3WYoaJzRdmU5Wq6Zjk7s49Xh2k3ElMkMynqWEBtxXotDDR8dxWuQMEkNW7MN3ge70xl3nWdTScKjvlYiqfj1ZDYOqGLF/bJrhfXs2gHRbr4BMe8ooYOejIpre95K5mk82VBjDWXT61qH+fE895ZT9rwisfNcghIoz42I8Hopxp9TfVHQN,iv:lVrM8mtHnjSCrorf10U1PxV6vWJ8bmnBHSfE0+fHrc0=,tag:bj6t3CGTgUoSWimvCer1nw==,type:str]
        key: ENC[AES256_GCM,data:0UEayD/0g0PI7fP0NlPOoO4WGHqdqOOQCBjIUaxu8/jDKm1rNWnAY6HX7USStgxqycMHdBRQQqavKaQMUODIm9wRHOJpDwjCfS8zesi7/we0GUUBkhs6RUyGgvfxCJVH2xYafcMc0/fxozTeFH/42hFizy3tQ6gADPMT6Q/PuWUZfnhDQcS9DCshuyMUDNxl74nLByPJMn6eopdXoVjgZKZewccihixIGFnFOHa7Ja/JUXTd961Byrt+sZ8cu5Vne1BkpIXxAYDDylNqfgL9UzeUHEuGfNh8iokOveRt1SPw5CzgtYhFEEzlTFfZ2hlogCagm/cHr+IAX+oJQUPTnB4FSiAiQArWYabWKEeI3lE76OHEbLS8SbCtpS514T6lQLOWTMmKP3eimWxDy3gSHQ==,iv:ZItcFG1ZxKek6hQxYkokjIBFOcosGWMI8zgbLwWQAW4=,tag:V9jJrJoq23zfXgS/4pAsLg==,type:str]
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: ENC[AES256_GCM,data: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,iv:DopH1OeC+uC7jPCyPeFzdTVbETc0QEKKBhOnLoqJVcI=,tag:ovQIEUPJSyKXgxA22HxWBA==,type:str]
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: registry.k8s.io/kube-apiserver:v1.32.0
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 10.0.30.25
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # Configure the API server admission plugins.
        admissionControl:
            # Name is the name of the admission controller.
            - name: PodSecurity
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
                  # # Configure the API server authorization config. Node and RBAC authorizers are always added irrespective of the configuration.
                  # authorizationConfig:
                  #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
                  #       name: webhook # Name is used to describe the authorizer.
                  #       # webhook is the configuration for the webhook authorizer.
                  #       webhook:
                  #         connectionInfo:
                  #             type: InClusterConfig
                  #         failurePolicy: Deny
                  #         matchConditionSubjectAccessReviewVersion: v1
                  #         matchConditions:
                  #             - expression: has(request.resourceAttributes)
                  #             - expression: '!(\''system:serviceaccounts:kube-system\'' in request.groups)'
                  #         subjectAccessReviewVersion: v1
                  #         timeout: 3s
                  #     - type: Webhook # Type is the name of the authorizer. Allowed values are `Node`, `RBAC`, and `Webhook`.
                  #       name: in-cluster-authorizer # Name is used to describe the authorizer.
                  #       # webhook is the configuration for the webhook authorizer.
                  #       webhook:
                  #         connectionInfo:
                  #             type: InClusterConfig
                  #         failurePolicy: NoOpinion
                  #         matchConditionSubjectAccessReviewVersion: v1
                  #         subjectAccessReviewVersion: v1
                  #         timeout: 3s
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: registry.k8s.io/kube-controller-manager:v1.32.0
    # Kube-proxy server-specific configuration options
    proxy:
        # The container image used in the kube-proxy manifest.
        image: registry.k8s.io/kube-proxy:v1.32.0
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: registry.k8s.io/kube-scheduler:v1.32.0
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                # Disable Kubernetes discovery registry.
                disabled: true
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: ENC[AES256_GCM,data:VIJunLvLb728FhTO2FG+l7OxsTLLZWn2ochl+b0CXL/8q/E5wZgjOzpHSCgo/s5B0RviHi2MqiUtA3wlJFstGpIBYeVi/k2sZ4eVPqTUtgiazYA/pP6Aczzu2sbHmP4Vg0jKVce1Y6f0rdmfuDULVaPsuD99UZaMp6Cn4YKR7JHRUFuUi0wQ2rVVMbDi+sHGTS7tkqIB7X/jFQ4Kq8K5IEUjuBFMNySaehJo4+91aP8NZcSuB55qs0kvlMX2k3+lkHsdQKjcHfbFw01OYbHTyjJycEf6JV+n+wH/70P5WRRcKQVQCKLZP6PEZKV8HviBvFrvlvUw4YARY17lEwNAG89JmOVBqkSEG3SQmp0ioIMFttPHlYhoY7EOkX7E9FvK+Bmjm8G82967aMcd0pqA5YS96fnBTG1rYv2M0uomXV9e0TzqILgRwVZuLTgAJMvH3htogOGwe/2keM1ykBy9O5SkpV1iaTfc24sceynkQmvDrBx6yl4lIusAHYSJA8wu5JDhTobKCStBv8J2eLNjJT7de5MiT2Ojl6mNuAGilExJwBX2Su8vkioXgnSPbvNH5bCClBdpWhenN0VE0PtDwZSc90h27VfOLOZYQw5uC5C6rcFlZmnKLlUERXz+C51m8aLrYYddoY9smoILwufdjPga9f1FYY/QsLCdJVvX8aVn/LBqlRQI67ARppV5JgQHuOQihtw1B7vhVtcPQXQiiSG0cqCcjz53G31Yxy0ApvutuRvikqwyH3j93W8qdFHhcMZyvBDexFmBSa5Kk3KDgPdgIyXSHYrDLYt95JmwwB411vB0W+2u4k0VipHoKd0UNDfEGpFYOMzXKUD8Db3bidV2WUL6MYbUpz2pk5zI+0wtDEThR6XI+HRob0oLjkFpo77XrHccUVJaY5umzHe5Ezv8XqI/fGSMqbrfJzZNYxpRt6obzqPNayYFJcZ4sHb8ClZ02JTI4PuE90ol8M9/Emxg6w9BOLq/VKvZTTAZVZqI0EXxymo4zIjuzlDOkcDApiboDQ==,iv:8K8oiz9JzqoxLjzH/cG0DCntCOA2ndtwGl/sMo8EDkY=,tag:UNbrvDfx/v3hvoWRzSNb6w==,type:str]
            key: ENC[AES256_GCM,data:GtMmRwRHvA4DQE4n9G3C9aXD/GvgxcORIOmrwFjbT7v3Rwlqr0rrSUTXI0hHAGa0KtHDNPdEjXC6537xdMrpZ1s3DUyO9/JhA88NfvtPtoFZYRaPNWHb1AMkRrByhdelfWq3bj/7xI+Eq1rCqry3gm8JGrYAj5oU7Zp6hN5O3Y4aqHnTfaLV+dynHSOC8vx1Hs8CRZK3d82KVEyhVALuH4lVmhyFFBg6ZTepMs2tSgCLGO+95Z2Ca9AtCkKxLtaTnP/m+SxKuZ+JCZjS7OMmSSX3BZsbHl5tCOEQolfy03uSfC7eMuZjQvZ9gNkRXAmzwIu1crbppm7ItzwzPmu6DqjyEdya0En2EiocxuIf13ToOxuPDJNwBtIOOdtSpJ3R7gt8Ef7F/H2+0Mdfr8bIaA==,iv:4Ee9DsfPjBa81n3aHRd0qrHgzyGAfxb22qLrgVTMgTk=,tag:RcnR4EjbIGfI84G/CrsAcw==,type:str]
            # # The container image used to create the etcd service.
            # image: gcr.io/etcd-development/etcd:v3.5.17
            # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.
            # advertisedSubnets:
            #     - 10.0.0.0/8
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
# # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
# # Decryption secret example (do not use in production!).
# aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=
# # Core DNS specific configuration options.
# coreDNS:
#     image: registry.k8s.io/coredns/coredns:v1.12.0 # The `image` field is an override to the default coredns image.
# # External cloud provider configuration.
# externalCloudProvider:
#     enabled: true # Enable external cloud provider.
#     # A list of urls that point to additional manifests for an external cloud provider.
#     manifests:
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
#         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
# # A map of key value pairs that will be added while fetching the extraManifests.
# extraManifestHeaders:
#     Token: "1234567"
#     X-ExtraInfo: info
# # Settings for admin kubeconfig generation.
# adminKubeconfig:
#     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
# # Allows running workload on control-plane nodes.
# allowSchedulingOnControlPlanes: true
sops:
    age:
        - recipient: age18dvn87z8hq2e0kak3f5d06xn9ynpcmfkkvep4ch8z32m7hkma3xsmgez3x
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBQajkwNHJOb0I1dWhFTUZW
            K3VSMS9KVzF0VFdxVzBKT1pWN1lRalVPRVZZCkh2T2M5VzUybldrbXpCZkRmR1Yr
            UmVSKzNYcy9iY1JxaXJVTDFHMU5NekUKLS0tIE93S09mbmJBWmFscUZGWkZ3RHh3
            RWJmR2RCTmdaTEkwMWZVditmU1ZFT28KT/yOmXCmuuoC1O6Xe4Jjf7E57RlvmwU2
            u1kDCpaOn2I5e1FongE0WWr4nleeEkN7Nkmj+ZLo8jv0lFALdesviA==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2025-04-15T17:57:40Z"
    mac: ENC[AES256_GCM,data:RUNfGs2QqUXzxUiiHqsVs4qfSCJ4cBSOZP6X6BpjZWLMc9DJwLGqdbWDVJULIC4WNCXC405pFrnCra4uglXnrUXjsCLWlKNsZ2E7RNqT7MHBVp15t8r79VjY5zJdEjsEqKxtHtgBpP/K5abI4VOfuJEucj7W2TLXAWvdycwqoTw=,iv:aG6IHWpongeD/Njtqg1ly99qYwcSQfcjAc9nI+fzQic=,tag:i0t5ElEQ3TUMapKS1HcdFw==,type:str]
    encrypted_regex: ^(crt|key|token|id|secret|secretboxEncryptionSecret)$
    version: 3.10.2
